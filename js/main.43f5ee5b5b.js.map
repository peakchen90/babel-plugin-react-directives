{"version":3,"sources":["webpack:///../src/utils/attribute.js","webpack:///../src/utils/element.js","webpack:///../src/utils/util.js","webpack:///../src/directives/if.js","webpack:///../src/directives/show.js","webpack:///../src/directives/for.js","webpack:///../src/directives/class.js","webpack:///./src/editor.js","webpack:///./src/code/js.js","webpack:///./src/code/css.js","webpack:///./src/code/options.js","webpack:///./src/preview.js","webpack:///./src/index.js","webpack:///../src/utils/builder.js","webpack:///../src/index.js","webpack:///../src/shared.js"],"names":["t","require","AttributeUtil","path","this","node","isValid","isJSXAttribute","isJSXNamespacedName","name","namespace","value","isJSXExpressionContainer","isExpression","expression","get","valuePath","findParent","_path","isJSXElement","module","exports","attributeUtil","Proxy","target","p","receiver","Reflect","generator","ElementUtil","openingElement","isIdentifier","code","result","attributes","i","length","push","attrName","index","ns","split","hasNamespace","attrPath","getNextSibling","getSibling","key","nextPath","isJSXText","test","_value","prop","directivePath","find","getResult","mergeItems","lastAttrIndex","lastSpreadAttrIndex","setValue","val","isJSXSpreadAttribute","argument","replacement","jsxAttribute","jsxIdentifier","jsxExpressionContainer","reverse","remove","pushContainer","parent","isJSXFragment","elementUtil","codeFrameColumns","assert","chalk","semver","getMemberPathStack","stack","isMemberExpression","hub","findDeconstructionPathStack","identifierName","isObjectPattern","isArrayPattern","targetPath","nestedVisitor","Identifier","isObjectProperty","traverse","parentPath","elements","indexOf","likeNumericLiteral","Object","create","getPrototypeOf","numericLiteral","start","end","loc","type","isThisExpression","codeFrameWarn","message","process","env","JEST_TEST_ENV","console","log","yellow","file","highlightCode","linesAbove","linesBelow","assertVersion","version","range","minSatisfying","getReferenceStack","bindingStack","binding","scope","bindings","first","refsStack","splice","isNullLiteral","deprecatedError","Error","DIRECTIVES","attrUtil","elemUtil","Condition","directive","traverseList","traverseIf","JSXElement","attrs","filter","attr","IF","stop","traverseCondition","_lastResult","valueExpr","buildCodeFrameError","nextSibling","findAttrPath","ELSE_IF","ELSE","forEach","conditions","directiveData","isTopElement","replaceWith","conditionalExpression","nullLiteral","reduceRight","prev","curr","testExpr","transform","builder","SHOW","bindingValue","mergeProps","isStringLiteral","objectExpression","objectProperty","identifier","spreadElement","buildCallRuntimeExpression","stringLiteral","arrayExpression","thisExpression","Boolean","FOR","isBinaryExpression","operator","left","isSequenceExpression","expressions","every","n","traverseArgs","traverseTarget","right","slice","callExpression","memberExpression","arrowFunctionExpression","CLASS","monaco","editor","defineTheme","setTheme","editorStyle","fontSize","lineHeight","tabSize","minimap","enabled","currentTab","jsEditor","document","getElementById","language","cssEditor","optionsEditor","refreshActiveEditor","setTimeout","layout","querySelector","addEventListener","e","getAttribute","window","throttle","preview","style","ready","previewWindow","previewDocument","_autoRender","updateCSS","css","innerHTML","render","js","options","Babel","presets","availablePresets","es2017","react","plugins","JSON","parse","availablePlugins","__render__","__catchError__","renderPreview","getRenderValues","editors","getValue","src","Date","now","contentWindow","onDidChangeModelContent","debounce","_renderPreview","JsTabs","elm","init","display","buildMemberExpression","args","reduce","isNumericLiteral","fileName","contextExpr","runtimeMethodExpr","callee","updateOpts","transformIf","transformShow","transformFor","transformClass","api","inherits","visitor","Program","state","opts","JSXAttribute","elementPath","optionsValidate","Ajv","ajvErrors","prefix","ajv","allErrors","jsonPointers","compile","properties","pattern","errorMessage","errors","assign"],"mappings":"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","file":"js/main.43f5ee5b5b.js","sourcesContent":["const t = require('@babel/types');\n\nclass AttributeUtil {\n  constructor(path) {\n    this.path = path;\n    this.node = path && path.node;\n    this.isValid = t.isJSXAttribute(this.node);\n  }\n\n  /**\n   * 返回属性名称\n   * @return {string}\n   */\n  name() {\n    // such as: <div abc:def=\"\" />\n    if (t.isJSXNamespacedName(this.node.name)) {\n      return `${this.node.name.namespace}:${this.node.name.name}`;\n    }\n    return this.node.name.name;\n  }\n\n  /**\n   * 返回属性值NodePath\n   * @return {NodePath|null}\n   */\n  valuePath() {\n    if (this.node.value === null) {\n      return null;\n    }\n    if (t.isJSXExpressionContainer(this.node.value)) {\n      if (t.isExpression(this.node.value.expression)) {\n        return this.path.get('value.expression');\n      }\n      return null;\n    }\n    if (this.node.value !== null) {\n      return this.path.get('value');\n    }\n    return null;\n  }\n\n  /**\n   * 返回属性值表达式\n   * @return {Node|null}\n   */\n  valueExpr() {\n    const valuePath = this.valuePath();\n    if (valuePath) {\n      return valuePath.node || null;\n    }\n    return null;\n  }\n\n  /**\n   * 返回对应的JSXElement\n   * @return {JSXElement}\n   */\n  JSXElement() {\n    return this.path.findParent(\n      (_path) => t.isJSXElement(_path.node)\n    );\n  }\n}\n\nmodule.exports = function attrUtil(path) {\n  const attributeUtil = new AttributeUtil(path);\n\n  return new Proxy(attributeUtil, {\n    get(target, p, receiver) {\n      /* istanbul ignore if: fault tolerant control */\n      if (!target.isValid && typeof target[p] === 'function') {\n        return () => null;\n      }\n      return Reflect.get(target, p, receiver);\n    }\n  });\n};\n","const t = require('@babel/types');\nconst { default: generator } = require('@babel/generator');\n\nclass ElementUtil {\n  constructor(path) {\n    this.path = path;\n    this.node = path && path.node;\n    this.isValid = t.isJSXElement(this.node);\n  }\n\n  /**\n   * 返回标签名\n   * @return {string}\n   */\n  name() {\n    const name = this.node.openingElement.name;\n    if (t.isIdentifier(name)) {\n      return name.name;\n    }\n    return generator(name).code;\n  }\n\n  /**\n   * 返回所有的属性NodePath\n   * @return {Array<NodePath>}\n   */\n  attributes() {\n    const result = [];\n    const attributes = this.node.openingElement.attributes;\n\n    for (let i = 0; i < attributes.length; i++) {\n      result.push(this.path.get(`openingElement.attributes.${i}`));\n    }\n\n    return result;\n  }\n\n  /**\n   * 根据属性名返回的找到的第一个属性NodePath(从最后开始查找)\n   * @param attrName 属性名称\n   * @return {NodePath|null}\n   */\n  findAttrPath(attrName) {\n    const attributes = this.node.openingElement.attributes;\n    let index = attributes.length - 1;\n\n    const ns = attrName.split(':');\n    const hasNamespace = ns.length > 1;\n\n    while (index >= 0) {\n      const attrPath = this.path.get(`openingElement.attributes.${index}`);\n      if (t.isJSXAttribute(attrPath.node)) {\n        // 使用命名空间的属性\n        if (\n          hasNamespace\n          && t.isJSXNamespacedName(attrPath.node.name)\n          && attrPath.node.name.namespace === ns[0]\n          && attrPath.node.name.name === ns[1]\n        ) {\n          return attrPath;\n        }\n\n        if (!hasNamespace && attrPath.node.name.name === attrName) {\n          return attrPath;\n        }\n      }\n      index--;\n    }\n\n    return null;\n  }\n\n  /**\n   * 找出下一个可用的兄弟节点\n   * @return {NodePath|null}\n   */\n  nextSibling() {\n    const getNextSibling = (path) => {\n      return path.getSibling(path.key + 1);\n    };\n\n    let nextPath = getNextSibling(this.path);\n    if (!nextPath.node) {\n      return null;\n    }\n\n    if (t.isJSXText(nextPath.node)) {\n      if (/^\\s*$/.test(nextPath.node.value)) {\n        nextPath = getNextSibling(nextPath);\n      } else {\n        return nextPath;\n      }\n    }\n\n    if (!nextPath.node) {\n      return null;\n    }\n    return nextPath;\n  }\n\n  /**\n   * 合并属性\n   * @param option\n   * @return {null|NodePath}\n   */\n  mergeProps(\n    {\n      prop, // 属性名(用于合并及修改的属性名)\n      directivePath, // 指令属性的NodePath\n      find, // 遍历的attribute回调方法，返回值用于判断匹配成功\n      getResult // 合并结果回调方法，返回值用于设置到属性名上\n    }\n  ) {\n    const attributes = this.attributes();\n    const mergeItems = [];\n\n    let lastAttrIndex = -1; // 最后一个属性位置\n    let lastSpreadAttrIndex = -1; // 最后一个spread属性位置\n\n    // 用于find回调设置值\n    let _value;\n    const setValue = (val) => _value = val;\n\n    for (let i = attributes.length - 1; i >= 0; i--) {\n      const attrPath = attributes[i];\n      if (attrPath === directivePath) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (t.isJSXSpreadAttribute(attrPath.node)) {\n        if (lastSpreadAttrIndex === -1) {\n          lastSpreadAttrIndex = i;\n        }\n        mergeItems.push(attrPath.node.argument);\n      } else if (lastAttrIndex === -1 && find(attrPath, setValue)) {\n        lastAttrIndex = i;\n        if (_value) {\n          mergeItems.push(_value);\n        }\n        break;\n      }\n    }\n\n    // 创建用于替换属性\n    const replacement = t.jsxAttribute(\n      t.jsxIdentifier(prop),\n      t.jsxExpressionContainer(\n        getResult(mergeItems.reverse())\n      )\n    );\n\n    if (lastAttrIndex >= 0) {\n      attributes[lastAttrIndex].remove();\n    }\n    // 在最后插入替换属性\n    this.path.get('openingElement').pushContainer('attributes', replacement);\n\n    return replacement;\n  }\n\n  /**\n   * 是否是顶层Element\n   * @return {null|boolean}\n   */\n  isTopElement() {\n    return !t.isJSXElement(this.path.parent) && !t.isJSXFragment(this.path.parent);\n  }\n}\n\nmodule.exports = function elemUtil(path) {\n  const elementUtil = new ElementUtil(path);\n\n  return new Proxy(elementUtil, {\n    get(target, p, receiver) {\n      /* istanbul ignore if: fault tolerant control */\n      if (!target.isValid && typeof target[p] === 'function') {\n        return () => null;\n      }\n      return Reflect.get(target, p, receiver);\n    }\n  });\n};\n","const { codeFrameColumns } = require('@babel/code-frame');\nconst t = require('@babel/types');\nconst assert = require('assert');\nconst chalk = require('chalk');\nconst semver = require('semver');\n\n/**\n * 打印附带代码位置的警告信息\n * @param path\n * @param message\n */\nfunction codeFrameWarn(path, message) {\n  // jest测试时忽略\n  if (process.env.JEST_TEST_ENV) {\n    return;\n  }\n\n  /* istanbul ignore next: print warn info */\n  console.log(chalk.yellow(`[Warn]: ${message}`));\n\n  /* istanbul ignore next: print warn info */\n  if (path && path.hub && path.node) {\n    const code = path.hub.file.code;\n    console.log(codeFrameColumns(\n      code,\n      path.node.loc,\n      {\n        highlightCode: true,\n        linesAbove: 2,\n        linesBelow: 3\n      }\n    ));\n  }\n}\n\n/**\n * 断言babel版本是否支持\n * @param version\n * @param range\n */\nfunction assertVersion(version, range) {\n  assert(\n    semver.minSatisfying([version], range),\n    `Requires Babel \"${range}\", but was loaded with ${version}.`\n  );\n}\n\n/**\n * 返回一个对象的成员访问栈，如: a.b.c 返回 [pathA, pathB, pathC] 数组元素为对应的NodePath\n * @param path\n * @return {Array<NodePath>}\n */\nfunction getMemberPathStack(path) {\n  const stack = [];\n  while (t.isMemberExpression(path && path.node)) {\n    stack.push(path.get('property'));\n    path = path.get('object');\n  }\n  if (path && path.node && path.hub) { // 简单判断是一个NodePath对象\n    stack.push(path);\n  }\n  return stack.reverse();\n}\n\n/**\n * 找到一个变量在一个数组或对象的解构栈，如: let { a, b: [c] } = obj 中变量c的解构栈返回: [pathB, NumericLiteral(0)]\n * @param path\n * @param identifierName\n * @return {Array<NodePath>}\n */\nfunction findDeconstructionPathStack(path, identifierName) {\n  if (!t.isObjectPattern(path && path.node) && !t.isArrayPattern(path && path.node)) {\n    return [];\n  }\n\n  const stack = [];\n  let targetPath = null;\n  const nestedVisitor = {\n    Identifier(_path) {\n      if (\n        _path.node.name === identifierName\n        && (\n          (t.isObjectProperty(_path.parent) && _path.parent.value === _path.node)\n          || t.isArrayPattern(_path.parent)\n        )\n      ) {\n        targetPath = _path;\n        // Note: 这里不能停止遍历，要找出可能的最后一个标识符\n      }\n    }\n  };\n\n  path.traverse(nestedVisitor);\n\n  if (targetPath) {\n    while (targetPath !== path) {\n      if (t.isObjectProperty(targetPath.parent)) {\n        stack.push(targetPath.parentPath.get('key'));\n        targetPath = targetPath.parentPath && targetPath.parentPath.parentPath;\n      } else if (t.isArrayPattern(targetPath.parent)) {\n        const index = targetPath.parent.elements.indexOf(targetPath.node);\n        // 创建一个类PathNode对象(不能遍历)\n        const likeNumericLiteral = Object.create(Object.getPrototypeOf(targetPath));\n        likeNumericLiteral.node = {\n          ...t.numericLiteral(index),\n          start: targetPath.node.start,\n          end: targetPath.node.end,\n          loc: targetPath.node.loc\n        };\n        likeNumericLiteral.hub = targetPath.hub;\n        likeNumericLiteral.type = likeNumericLiteral.node.type;\n        stack.push(likeNumericLiteral);\n        targetPath = targetPath.parentPath;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return stack.reverse();\n}\n\n/**\n * 返回一个变量或成员表达式引用的对象成员栈\n * @param path\n * @return {[]}\n */\nfunction getReferenceStack(path) {\n  let bindingStack = [];\n\n  /* istanbul ignore if: fault tolerant control */\n  if (!path) {\n    return bindingStack;\n  }\n\n  /* istanbul ignore if: fault tolerant control */\n  if (t.isIdentifier(path.node)) {\n    const identifierName = path.node.name;\n    let binding = path.scope.bindings[identifierName];\n\n    if (!binding) {\n      const targetPath = path.findParent((p) => (\n        !!p.scope.bindings[identifierName]\n      ));\n      if (targetPath) {\n        binding = targetPath.scope.bindings[identifierName];\n      }\n    }\n\n    if (!binding) {\n      return bindingStack;\n    }\n\n    bindingStack = [\n      ...getMemberPathStack(\n        binding.path.get('init')\n      ),\n      ...findDeconstructionPathStack(\n        binding.path.get('id'),\n        identifierName\n      )\n    ];\n  } else if (t.isMemberExpression(path.node)) {\n    bindingStack = getMemberPathStack(path);\n  }\n\n  // 判断最后一个标识符是否引用了其他值\n  let first = bindingStack[0];\n  while (first && !isThisExpression(first.node)) {\n    const refsStack = getReferenceStack(first);\n    first = refsStack[0];\n    if (refsStack.length > 0) {\n      bindingStack.splice(0, 1, ...refsStack);\n    }\n  }\n\n  return bindingStack;\n}\n\n/**\n * 判断是否是this表达式\n * @param node\n * @return {Boolean}\n */\nfunction isThisExpression(node) {\n  return t.isThisExpression(node) || t.isIdentifier(node, { name: 'this' });\n}\n\n/**\n * 判断是否是null表达式\n * @param node\n * @return {Boolean}\n */\nfunction isNullLiteral(node) {\n  return t.isNullLiteral(node) || t.isIdentifier(node, { name: 'null' });\n}\n\n/**\n * 弃用指令错误\n * @param name\n * @return {Error}\n */\nfunction deprecatedError(name) {\n  return new Error(`The deprecated directive \\`${name}\\` cannot be used in strict mode`);\n}\n\nmodule.exports = {\n  codeFrameWarn,\n  assertVersion,\n  getMemberPathStack,\n  findDeconstructionPathStack,\n  getReferenceStack,\n  isThisExpression,\n  isNullLiteral,\n  deprecatedError\n};\n","const t = require('@babel/types');\nconst { DIRECTIVES } = require('../shared');\nconst attrUtil = require('../utils/attribute');\nconst elemUtil = require('../utils/element');\nconst { codeFrameWarn } = require('../utils/util');\n\n/**\n * 条件指令的信息\n */\nclass Condition {\n  constructor(directive, path, attrPath) {\n    this.directive = directive;\n    this.path = path;\n    this.attrPath = attrPath;\n  }\n}\n\n/**\n * 1. 先找到一个包含if指令的JSXElement，并以它的父节点开始遍历JSXElement\n *    1.1 如果找到包含if指令时，查找其后的else-if及else指令\n *    1.2 在1.1找到的目标指令时，递归查找子节点的if指令，并执行1.1，执行完成后将这次所有的条件语句push到栈中（确保子节点先入栈，遍历时先遍历子节点）\n * 2. 递归查找完成时，将栈里的每组条件指令依次转为为对应的条件表达式\n */\n\n/**\n * 保存遍历列表（二维数组，每个属性是包含一组条件的数组）\n */\nlet traverseList = [];\n\n/**\n * 遍历包含 if 指令的 JSXElement\n * @param path\n * @return {Array}\n */\nfunction traverseIf(path) {\n  const nestedVisitor = {\n    JSXElement(_path) {\n      const attributes = elemUtil(_path).attributes();\n      const attrs = attributes.filter((attr) => attrUtil(attr).name() === DIRECTIVES.IF);\n      if (attrs.length === 1) {\n        _path.stop(); // 跳过遍历子节点\n        traverseList.push(traverseCondition(_path, attrs[0]));\n      }\n    }\n  };\n\n  path.traverse(nestedVisitor);\n\n  return traverseList;\n}\n\n/**\n * 遍历一组条件JSXElement\n * @param path\n * @param attrPath\n * @param _lastResult\n * @return {*|Array}\n */\nfunction traverseCondition(path, attrPath, _lastResult) {\n  const result = _lastResult || [];\n\n  if (result.length === 0 && attrUtil(attrPath).name() === DIRECTIVES.IF) {\n    if (!attrUtil(attrPath).valueExpr()) {\n      throw attrPath.buildCodeFrameError(\n        `\\`${DIRECTIVES.IF}\\` used on element <${elemUtil(path).name()}> without binding value.`\n      );\n    }\n    traverseIf(path);\n    result.push(new Condition(DIRECTIVES.IF, path, attrPath));\n  }\n\n  // 查找else-if指令\n  path = elemUtil(path).nextSibling();\n  attrPath = elemUtil(path).findAttrPath(DIRECTIVES.ELSE_IF);\n  if (attrPath) {\n    if (!attrUtil(attrPath).valueExpr()) {\n      throw attrPath.buildCodeFrameError(\n        `\\`${DIRECTIVES.ELSE_IF}\\` used on element <${elemUtil(path).name()}> without binding value.`\n      );\n    }\n    traverseIf(path);\n    result.push(new Condition(DIRECTIVES.ELSE_IF, path, attrPath));\n    return traverseCondition(path, attrPath, result);\n  }\n\n  // 查找else指令\n  attrPath = elemUtil(path).findAttrPath(DIRECTIVES.ELSE);\n  if (attrPath) {\n    if (attrUtil(attrPath).valueExpr()) {\n      codeFrameWarn(\n        attrPath,\n        `\\`${DIRECTIVES.ELSE}\\` used on element <${elemUtil(path).name()}> should not have a binding value`\n      );\n    }\n    traverseIf(path);\n    result.push(new Condition(DIRECTIVES.ELSE, path, attrPath));\n  }\n\n  return result;\n}\n\n/**\n * 转换一组条件语句\n * @param conditions\n */\nfunction transform(conditions) {\n  // 第一个为if条件，找到并移出if属性\n  const directiveData = conditions[0];\n  const path = directiveData.path;\n  const attrPath = directiveData.attrPath;\n\n  // 顶层元素\n  if (elemUtil(path).isTopElement()) {\n    path.replaceWith(\n      t.conditionalExpression(\n        attrUtil(attrPath).valueExpr(),\n        path.node,\n        t.nullLiteral()\n      )\n    );\n    attrPath.remove();\n    return;\n  }\n\n  path.replaceWith(\n    t.jsxExpressionContainer(\n      conditions.reduceRight((prev, curr, index) => {\n        const testExpr = attrUtil(curr.attrPath).valueExpr();\n\n        let expression;\n        if (!prev) {\n          // 最后一个节点是else\n          if (curr.directive === DIRECTIVES.ELSE) {\n            expression = curr.path.node;\n          } else {\n            expression = t.conditionalExpression(\n              testExpr,\n              curr.path.node,\n              t.nullLiteral()\n            );\n          }\n        } else {\n          expression = t.conditionalExpression(\n            testExpr,\n            curr.path.node,\n            prev\n          );\n        }\n        curr.attrPath.remove();\n        if (index > 0) { // 移出非if指令所在的JSXElement（if指令所在的节点用于替换新的节点）\n          curr.path.remove();\n        }\n        return expression;\n      }, null)\n    )\n  );\n}\n\n/**\n * 转换if指令\n * @param path\n */\nfunction transformIf(path) {\n  if (elemUtil(path).findAttrPath(DIRECTIVES.IF)) {\n    traverseList = [];\n    traverseIf(path.parentPath);\n\n    traverseList.forEach((conditions) => transform(conditions));\n  }\n}\n\nmodule.exports = transformIf;\n","const t = require('@babel/types');\nconst { DIRECTIVES } = require('../shared');\nconst { codeFrameWarn } = require('../utils/util');\nconst attrUtil = require('../utils/attribute');\nconst elemUtil = require('../utils/element');\nconst builder = require('../utils/builder');\n\n/**\n * 转换show指令\n * @param path\n */\nfunction transformShow(path) {\n  const attrPath = elemUtil(path).findAttrPath(DIRECTIVES.SHOW);\n  if (!attrPath) {\n    return;\n  }\n\n  const bindingValue = attrUtil(attrPath).valueExpr();\n\n  /* istanbul ignore next: print warn info */\n  if (!bindingValue) {\n    codeFrameWarn(\n      attrPath,\n      `\\`${DIRECTIVES.SHOW}\\` used on element <${elemUtil(path).name()}> without binding value`\n    );\n    attrPath.remove();\n    return;\n  }\n\n  // 设置 `style` prop\n  elemUtil(path).mergeProps({\n    prop: 'style',\n    directivePath: attrPath,\n    find(attr, setValue) {\n      const attrName = attrUtil(attr).name();\n      const valueExpr = attrUtil(attr).valueExpr();\n\n      /* istanbul ignore next: print warn info */\n      if (attrName === 'style') {\n        if (t.isStringLiteral(valueExpr)) {\n          codeFrameWarn(\n            attr,\n            'The `style` prop expected a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \\'em\\'}}'\n          );\n        } else {\n          setValue(t.objectExpression([\n            t.objectProperty(\n              t.identifier('style'),\n              valueExpr\n            )\n          ]));\n        }\n        return true;\n      }\n\n      /* istanbul ignore next: print warn info */\n      if (/^(style)$/i.test(attrName)) {\n        codeFrameWarn(\n          attr,\n          `Non-lowercase \\`style\\` prop will be ignored, when use \\`${DIRECTIVES.SHOW}\\``\n        );\n        return true;\n      }\n      return false;\n    },\n    getResult(mergeItems) {\n      return t.objectExpression([\n        mergeItems.length > 0 && t.spreadElement(\n          builder.buildCallRuntimeExpression(\n            'merge-props.js',\n            [\n              t.stringLiteral('style'),\n              t.arrayExpression(mergeItems)\n            ],\n            t.thisExpression()\n          )\n        ),\n        t.objectProperty(\n          t.identifier('display'),\n          t.conditionalExpression(\n            bindingValue,\n            t.identifier('undefined'),\n            t.stringLiteral('none')\n          )\n        )\n      ].filter(Boolean));\n    },\n  });\n\n  attrPath.remove();\n}\n\nmodule.exports = transformShow;\n","const t = require('@babel/types');\nconst { DIRECTIVES } = require('../shared');\nconst attrUtil = require('../utils/attribute');\nconst elemUtil = require('../utils/element');\nconst { codeFrameWarn } = require('../utils/util');\n\n/**\n * 转换for遍历指令\n * @param path\n */\nfunction transformFor(path) {\n  const attrPath = elemUtil(path).findAttrPath(DIRECTIVES.FOR);\n  if (!attrPath) {\n    return;\n  }\n\n  const bindingValue = attrUtil(attrPath).valueExpr();\n\n  /* istanbul ignore next: print warn info */\n  if (!bindingValue) {\n    codeFrameWarn(\n      attrPath,\n      `\\`${DIRECTIVES.FOR}\\` used on element <${elemUtil(path).name()}> without binding value`\n    );\n    attrPath.remove();\n    return;\n  }\n\n  const valuePath = attrUtil(attrPath).valuePath();\n\n  if (!t.isBinaryExpression(bindingValue, { operator: 'in' })) {\n    throw valuePath.buildCodeFrameError(\n      `The \\`${DIRECTIVES.FOR}\\` used on element <${elemUtil(path).name()}> with invalid binding value. `\n      + `Usage example: \\`<div ${DIRECTIVES.FOR}={(item, index) in list}>{item}</div>\\``\n    );\n  }\n  if (\n    !t.isIdentifier(bindingValue.left)\n    && (!t.isSequenceExpression(bindingValue.left)\n      || !bindingValue.left.expressions.every((n) => t.isIdentifier(n))\n    )) {\n    throw valuePath.get('left').buildCodeFrameError(\n      `The \\`${DIRECTIVES.FOR}\\` used on element <${elemUtil(path).name()}> with invalid binding value. `\n      + `Usage example: \\`<div ${DIRECTIVES.FOR}={(item, index) in list}>{item}</div>\\``\n    );\n  }\n\n  const traverseTarget = bindingValue.right;\n  let traverseArgs;\n\n  // 最多2个参数\n  if (t.isSequenceExpression(bindingValue.left)) {\n    if (bindingValue.left.expressions.length > 2) {\n      codeFrameWarn(\n        valuePath.get('left'),\n        `The \\`${DIRECTIVES.FOR}\\` binding value has up to 2 parameters for traversal, and the extra parameters are ignored.`\n      );\n    }\n    traverseArgs = bindingValue.left.expressions.slice(0, 2);\n  } else {\n    traverseArgs = [bindingValue.left];\n  }\n\n  let replacement = t.callExpression(\n    t.memberExpression(\n      traverseTarget,\n      t.identifier('map')\n    ),\n    [\n      t.arrowFunctionExpression(\n        traverseArgs,\n        { ...path.node }\n      )\n    ]\n  );\n  // 非顶层Element\n  if (!elemUtil(path).isTopElement()) {\n    replacement = t.jsxExpressionContainer(\n      replacement\n    );\n  }\n\n  path.replaceWith(\n    replacement\n  );\n\n  attrPath.remove();\n}\n\nmodule.exports = transformFor;\n","const t = require('@babel/types');\nconst { DIRECTIVES } = require('../shared');\nconst attrUtil = require('../utils/attribute');\nconst elemUtil = require('../utils/element');\nconst builder = require('../utils/builder');\nconst { codeFrameWarn } = require('../utils/util');\n\n/**\n * 转换className\n * @param path\n */\nfunction transformClass(path) {\n  const attrPath = elemUtil(path).findAttrPath(DIRECTIVES.CLASS);\n  if (!attrPath) {\n    return;\n  }\n\n  const bindingValue = attrUtil(attrPath).valueExpr();\n\n  /* istanbul ignore next: print warn info */\n  if (!bindingValue) {\n    codeFrameWarn(\n      attrPath,\n      `\\`${DIRECTIVES.CLASS}\\` used on element <${elemUtil(path).name()}> without binding value`\n    );\n    attrPath.remove();\n    return;\n  }\n\n  // 设置 `className` prop\n  elemUtil(path).mergeProps({\n    prop: 'className',\n\n    directivePath: attrPath,\n\n    find(attr, setValue) {\n      const attrName = attrUtil(attr).name();\n      const valueExpr = attrUtil(attr).valueExpr();\n\n      if (attrName === 'className') {\n        setValue(t.objectExpression([\n          t.objectProperty(\n            t.identifier('className'),\n            valueExpr\n          )\n        ]));\n\n        return true;\n      }\n\n      return false;\n    },\n\n    getResult(mergeItems) {\n      if (mergeItems.length > 0) {\n        return builder.buildCallRuntimeExpression(\n          'classnames.js',\n          [\n            t.arrayExpression([\n              mergeItems.length > 0 && builder.buildCallRuntimeExpression(\n                'merge-props.js',\n                [\n                  t.stringLiteral('className'),\n                  t.arrayExpression(mergeItems)\n                ],\n                t.thisExpression()\n              ),\n              bindingValue\n            ].filter(Boolean))\n          ]\n        );\n      }\n\n      return builder.buildCallRuntimeExpression(\n        'classnames.js',\n        [bindingValue]\n      );\n    },\n  });\n\n  attrPath.remove();\n}\n\nmodule.exports = transformClass;\n","import throttle from 'lodash/throttle';\nimport defaultJsCode from './code/js';\nimport defaultCssCode from './code/css';\nimport defaultOptionsCode from './code/options';\n\nmonaco.editor.defineTheme('default-theme', require('monaco-themes/themes/Solarized-light'));\n\nmonaco.editor.setTheme('default-theme');\n\nconst editorStyle = {\n  fontSize: 14,\n  lineHeight: 24,\n  tabSize: 2\n};\nconst minimap = { enabled: false };\n\nlet currentTab = 'js';\n\nconst jsEditor = monaco.editor.create(document.getElementById('editor-js'), {\n  language: 'javascript',\n  value: defaultJsCode,\n  minimap,\n  ...editorStyle\n});\nconst cssEditor = monaco.editor.create(document.getElementById('editor-css'), {\n  language: 'css',\n  value: defaultCssCode,\n  minimap,\n  ...editorStyle\n});\nconst optionsEditor = monaco.editor.create(document.getElementById('editor-options'), {\n  language: 'json',\n  value: defaultOptionsCode,\n  minimap,\n  ...editorStyle\n});\n\ndocument.querySelector('#editor-tabs .js-tabs__tabs-container').addEventListener('click', (e) => {\n  const tab = e.target.getAttribute('data-tab');\n  switch (tab) {\n    case 'js':\n      currentTab = 'js';\n      break;\n    case 'css':\n      currentTab = 'css';\n      break;\n    case 'options':\n      currentTab = 'options';\n      break;\n    default:\n  }\n  refreshActiveEditor();\n});\n\nfunction refreshActiveEditor() {\n  setTimeout(() => {\n    switch (currentTab) {\n      case 'js':\n        jsEditor.layout();\n        break;\n      case 'css':\n        cssEditor.layout();\n        break;\n      case 'options':\n        optionsEditor.layout();\n        break;\n      default:\n    }\n  });\n}\n\nwindow.addEventListener('resize', throttle(() => {\n  refreshActiveEditor();\n}, 10));\n\nexport default {\n  jsEditor,\n  cssEditor,\n  optionsEditor\n};\n","const js = `export default function App() {\n  const [disabled, setDisabled] = React.useState(false);\n\n  return (\n    <div>\n      <button\n        onClick={() => setDisabled(!disabled)}\n        className=\"btn\"\n        x-class={{\n          'disabled-btn': disabled\n        }}>\n        <span x-if={disabled}>Disabled</span>\n        <span x-else>Available</span>\n      </button>\n    </div>\n  )\n};\n`;\n\nexport default js;\n","const css = `#app {\n  padding: 20px;\n}\n\n.btn {\n  padding: 10px 15px;\n  font-size: 14px;\n  border-radius: 4px;\n  outline: 0;\n  color: #ffffff;\n  background-color: #1890ff;\n  border-color: #1890ff;\n  text-shadow: 0 -1px 0 rgba(0, 0, 0, 0.12);\n  box-shadow: 0 2px 0 rgba(0, 0, 0, 0.045);\n  cursor: pointer;\n \n}\n\n.disabled-btn {\n  color: #ffffff;\n  background-color: #8cc8ff;\n  border-color: #8cc8ff;\n}\n`;\n\nexport default css;\n","const options = `{\n  \"prefix\": \"x\"\n}`;\n\nexport default options;\n","const preview = document.querySelector('.preview-render');\n\nlet style = null;\nlet ready = false;\nlet previewWindow = null;\nlet previewDocument = null;\nlet _autoRender = null;\n\n// delay load with no-cache\npreview.src = `./playground.html?${Date.now()}`;\n\npreview.addEventListener('load', () => {\n  ready = true;\n  previewWindow = preview.contentWindow;\n  previewDocument = preview.contentWindow.document;\n  if (typeof _autoRender === 'function') {\n    _autoRender();\n  }\n});\n\nexport function updateCSS(css = '') {\n  if (!style) {\n    style = previewDocument.getElementById('style');\n  }\n  style.innerHTML = css;\n}\n\nfunction render(js, options) {\n  try {\n    const { code } = Babel.transform(js, {\n      presets: [\n        Babel.availablePresets.es2017,\n        Babel.availablePresets.react\n      ],\n      plugins: [\n        [require('../../src/index'), JSON.parse(options)],\n        Babel.availablePlugins['proposal-object-rest-spread'],\n        Babel.availablePlugins['proposal-class-properties'],\n      ]\n    });\n\n    previewWindow.__render__(code);\n  } catch (e) {\n    previewWindow.__catchError__(e);\n  }\n}\n\nexport function renderPreview({ js, css, options }) {\n  if (ready) {\n    render(js, options);\n    updateCSS(css);\n  } else {\n    _autoRender = () => {\n      render(js, options);\n      updateCSS(css);\n    };\n  }\n}\n","import JsTabs from 'js-tabs';\nimport debounce from 'lodash/debounce';\nimport 'js-tabs/dist/main/js-tabs-base.css';\nimport './style/index.css';\nimport './style/loading.css';\n\nimport editors from './editor';\nimport { renderPreview, updateCSS } from './preview';\n\nfunction getRenderValues() {\n  return {\n    js: editors.jsEditor.getValue(),\n    css: editors.cssEditor.getValue(),\n    options: editors.optionsEditor.getValue()\n  };\n}\n\neditors.cssEditor.onDidChangeModelContent(debounce(() => {\n  updateCSS(editors.cssEditor.getValue());\n}, 600));\nconst _renderPreview = debounce(() => {\n  renderPreview(getRenderValues());\n}, 600);\neditors.jsEditor.onDidChangeModelContent(_renderPreview);\neditors.optionsEditor.onDidChangeModelContent(_renderPreview);\n\nsetTimeout(() => {\n  renderPreview(getRenderValues());\n});\n\n// init tabs\nnew JsTabs({ elm: '.left-section' }).init();\nnew JsTabs({ elm: '.right-section' }).init();\n\n// hide app loading\ndocument.querySelector('.app-loading').style.display = 'none';\n","const t = require('@babel/types');\nconst assert = require('assert');\n\n/**\n * 构建成员调用表达式，第一个参数为对象，其后参数为属性\n * @param args\n * @return {Expression}\n */\nfunction buildMemberExpression(...args) {\n  assert(args.length >= 2, 'at least 2 parameters are required');\n\n  return args.reduce((prev, curr) => {\n    if (!prev) {\n      return curr;\n    }\n    return t.memberExpression(prev, curr, t.isNumericLiteral(curr));\n  });\n}\n\n/**\n * 构建调用运行时方法表达式\n * @param fileName\n * @param args\n * @param contextExpr\n * @return {Expression}\n */\nfunction buildCallRuntimeExpression(fileName, args = [], contextExpr = null) {\n  assert(\n    typeof fileName === 'string' && fileName,\n    'fileName should be a non-empty string'\n  );\n\n  const runtimeMethodExpr = t.callExpression(\n    t.identifier('require'),\n    [t.stringLiteral(`babel-plugin-react-directives/runtime/${fileName}`)]\n  );\n\n  let callee = runtimeMethodExpr;\n  if (contextExpr) {\n    callee = t.memberExpression(\n      runtimeMethodExpr,\n      t.identifier('call')\n    );\n    args = [contextExpr, ...args];\n  }\n\n  return t.callExpression(\n    callee,\n    args\n  );\n}\n\nmodule.exports = {\n  buildMemberExpression,\n  buildCallRuntimeExpression\n};\n","const { DIRECTIVES, updateOpts } = require('./shared');\nconst attrUtil = require('./utils/attribute');\nconst elemUtil = require('./utils/element');\nconst { codeFrameWarn, assertVersion } = require('./utils/util');\n\nconst transformIf = require('./directives/if');\nconst transformShow = require('./directives/show');\nconst transformFor = require('./directives/for');\nconst transformClass = require('./directives/class');\n\nmodule.exports = (api) => {\n  if (api.assertVersion) {\n    api.assertVersion('>= 7.0.0');\n  } else {\n    assertVersion(api.version, '>= 7.0.0');\n  }\n\n  return {\n    name: 'react-directives',\n\n    inherits: require('@babel/plugin-syntax-jsx').default,\n\n    visitor: {\n      Program(path, state) {\n        updateOpts(state.opts);\n      },\n      JSXElement(path) {\n        transformShow(path);\n        transformClass(path);\n        transformFor(path);\n        transformIf(path);\n      },\n      JSXAttribute(path) {\n        const name = attrUtil(path).name();\n        let elementPath;\n\n        switch (name) {\n          case DIRECTIVES.IF:\n            throw path.buildCodeFrameError(\n              `There should be no more than one directive: \\`${name}\\`.`\n            );\n\n          case DIRECTIVES.ELSE:\n          case DIRECTIVES.ELSE_IF:\n            elementPath = attrUtil(path).JSXElement();\n            throw path.buildCodeFrameError(\n              `\\`${name}\\` used on element <${elemUtil(elementPath).name()}> without corresponding \\`${DIRECTIVES.IF}\\`.`\n            );\n\n          case DIRECTIVES.SHOW:\n          case DIRECTIVES.FOR:\n          case DIRECTIVES.CLASS:\n            codeFrameWarn(\n              path,\n              `There should be no more than one directive: \\`${name}\\``\n            );\n            path.remove();\n            break;\n\n          default:\n        }\n      }\n    }\n  };\n};\n","const assert = require('assert');\nconst Ajv = require('ajv');\nconst ajvErrors = require('ajv-errors');\n\n// plugin option\nconst opts = {\n  prefix: 'x'\n};\n\n// 指令名\nconst DIRECTIVES = {\n  get IF() {\n    return `${opts.prefix}-if`;\n  },\n  get ELSE() {\n    return `${opts.prefix}-else`;\n  },\n  get ELSE_IF() {\n    return `${opts.prefix}-else-if`;\n  },\n  get SHOW() {\n    return `${opts.prefix}-show`;\n  },\n  get FOR() {\n    return `${opts.prefix}-for`;\n  },\n  get CLASS() {\n    return `${opts.prefix}-class`;\n  },\n};\n\nlet optionsValidate;\n\n/**\n * 更新插件options\n * @param options\n */\nfunction updateOpts(options = {}) {\n  const {prefix} = options;\n\n  if (!optionsValidate) {\n    const ajv = new Ajv({\n      allErrors: true,\n      jsonPointers: true\n    });\n    optionsValidate = ajvErrors(ajv).compile({\n      properties: {\n        prefix: {\n          type: 'string',\n          pattern: '^[A-Za-z$_][A-Za-z0-9$_]*$',\n          errorMessage: 'The `prefix` option should be a string which javascript identifier, example: `foo`, `$abc`, `_abc123`.',\n        }\n      }\n    });\n  }\n\n  assert(\n    optionsValidate(options),\n    optionsValidate.errors\n    && optionsValidate.errors[0]\n    && optionsValidate.errors[0].message\n  );\n\n  Object.assign(opts, {\n    prefix: prefix || 'x',\n  });\n}\n\nmodule.exports = {\n  DIRECTIVES,\n  opts,\n  updateOpts,\n};\n"],"sourceRoot":""}